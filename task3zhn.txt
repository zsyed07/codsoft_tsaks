import tkinter as tk
from tkinter import messagebox


class ContactBookApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Contact Book")

        self.contacts = []

        # Labels and entry fields
        tk.Label(master, text="Name:").grid(row=0, column=0, sticky="w")
        self.name_entry = tk.Entry(master)
        self.name_entry.grid(row=0, column=1)

        tk.Label(master, text="Phone:").grid(row=1, column=0, sticky="w")
        self.phone_entry = tk.Entry(master)
        self.phone_entry.grid(row=1, column=1)

        tk.Label(master, text="Email:").grid(row=2, column=0, sticky="w")
        self.email_entry = tk.Entry(master)
        self.email_entry.grid(row=2, column=1)

        tk.Label(master, text="Address:").grid(row=3, column=0, sticky="w")
        self.address_entry = tk.Entry(master)
        self.address_entry.grid(row=3, column=1)

        # Buttons
        self.add_button = tk.Button(master, text="Add Contact", command=self.add_contact)
        self.add_button.grid(row=4, column=0, columnspan=2, pady=10)

        self.search_button = tk.Button(master, text="Search Contact", command=self.search_contact)
        self.search_button.grid(row=5, column=0, columnspan=2, pady=5)

        self.update_button = tk.Button(master, text="Update Contact", command=self.update_contact)
        self.update_button.grid(row=6, column=0, columnspan=2, pady=5)

        self.view_button = tk.Button(master, text="View Contact List", command=self.view_contact_list)
        self.view_button.grid(row=7, column=0, columnspan=2, pady=5)

    def add_contact(self):
        name = self.name_entry.get()
        phone = self.phone_entry.get()
        email = self.email_entry.get()
        address = self.address_entry.get()

        if name and phone:
            self.contacts.append({'Name': name, 'Phone': phone, 'Email': email, 'Address': address})
            messagebox.showinfo("Success", "Contact added successfully!")
            self.clear_entries()
        else:
            messagebox.showerror("Error", "Name and Phone number are required fields.")

    def search_contact(self):
        name = self.name_entry.get()
        if name:
            found = False
            for contact in self.contacts:
                if contact['Name'] == name:
                    messagebox.showinfo("Contact Details",
                                        f"Name: {contact['Name']}\nPhone: {contact['Phone']}\nEmail: {contact['Email']}\nAddress: {contact['Address']}")
                    found = True
                    break
            if not found:
                messagebox.showinfo("Not Found", "Contact not found.")
        else:
            messagebox.showerror("Error", "Please enter a name to search.")

    def update_contact(self):
        name = self.name_entry.get()
        if name:
            found = False
            for contact in self.contacts:
                if contact['Name'] == name:
                    contact['Phone'] = self.phone_entry.get()
                    contact['Email'] = self.email_entry.get()
                    contact['Address'] = self.address_entry.get()
                    messagebox.showinfo("Success", "Contact updated successfully!")
                    found = True
                    break
            if not found:
                messagebox.showinfo("Not Found", "Contact not found.")
        else:
            messagebox.showerror("Error", "Please enter a name to update.")

    def view_contact_list(self):
        contact_list_window = tk.Toplevel(self.master)
        contact_list_window.title("Contact List")

        if self.contacts:
            for i, contact in enumerate(self.contacts):
                contact_label = tk.Label(contact_list_window,
                                         text=f"{i + 1}. Name: {contact['Name']}, Phone: {contact['Phone']}, Email: {contact['Email']}, Address: {contact['Address']}")
                contact_label.pack(anchor="w")
        else:
            empty_label = tk.Label(contact_list_window, text="No contacts available.")
            empty_label.pack()

    def clear_entries(self):
        self.name_entry.delete(0, tk.END)
        self.phone_entry.delete(0, tk.END)
        self.email_entry.delete(0, tk.END)
        self.address_entry.delete(0, tk.END)


def main():
    root = tk.Tk()
    app = ContactBookApp(root)
    root.mainloop()


if __name__ == "__main__":
    main()
